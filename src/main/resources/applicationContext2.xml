<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- load in properties file -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>

	<!-- druid配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<!-- <property name="maxIdle" value="${maxIdle}"></property> -->
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"></property>
	</bean>
	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 配置数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 其它hibernate配置 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
			</props>
		</property>
		<property name="mappingResources" value="prv/hgs/domain/User2.hbm.xml" />
	</bean>
	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>


	<!-- 设置HibernateDaoSupport抽象类,使实现类无需再每个注入 -->
	<bean id="hibernateDaoSupport"
		class="org.springframework.orm.hibernate5.support.HibernateDaoSupport"
		abstract="true">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="userImp2" class="prv.hgs.dao.imp.UserImp2" parent="hibernateDaoSupport" />
	<bean id="userServiceImp2" class="prv.hgs.service.imp.UserServiceImp2">
		<property name="user2Dao" ref="userImp2"></property>
	</bean>
	<bean id="userAction2" class="prv.hgs.action.UserAction2">
		<property name="userServiceImp2" ref="userServiceImp2"></property>
	</bean>
	<!-- 通过注解进行增强事务 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->
	<!-- 通知进行增强事务 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="save*" /> <tx:method name="update*" /> <tx:method 
		name="delete*" /> <tx:method name="find*" read-only="true" /> </tx:attributes> 
		</tx:advice> 切面：将切入点 与通知 关联 <aop:config> <aop:advisor advice-ref="txAdvice" 
		pointcut="execution(* prv.hgs.dao..*.*(..))" /> </aop:config> -->
</beans>
